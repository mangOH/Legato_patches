From 9f6e156d16eb21de1c3afec2b114a59a92a0f431 Mon Sep 17 00:00:00 2001
From: David Clark <dclark@sierrawireless.com>
Date: Tue, 12 Dec 2017 14:54:32 -0800
Subject: [PATCH 2/3] Fix bug in ACK handling

Do automatically send block n+1 when ack of block n is received.  There was a
bug which could lead to the same data being transmitted many times
unnecessarily.

Resolves: LE-8895
Change-Id: Iebb10b4f949360e4c240c243b8b596c27296d7f9
Signed-off-by: David Clark <dclark@sierrawireless.com>
---
 core/packet.c | 25 +++++++++++++++++++++++--
 1 file changed, 23 insertions(+), 2 deletions(-)

diff --git a/core/packet.c b/core/packet.c
index 9c0dc20..6e5a62f 100644
--- a/core/packet.c
+++ b/core/packet.c
@@ -417,8 +417,9 @@ void lwm2m_handle_packet(lwm2m_context_t * contextP,
     coap_error_code = coap_parse_message(message, buffer, (uint16_t)length);
     if (coap_error_code == NO_ERROR)
     {
-        LOG_ARG("Parsed: ver %u, type %u, tkl %u, code %u.%.2u, mid %u, Content type: %d",
-                message->version, message->type, message->token_len, message->code >> 5, message->code & 0x1F, message->mid, message->content_type);
+        LOG_ARG("Parsed: blk: %u ver %u, type %u, tkl %u, code %u.%.2u, mid %u, Content type: %d",
+                message->block1_num, message->version, message->type, message->token_len, message->code >> 5,
+                message->code & 0x1F, message->mid, message->content_type);
         LOG_ARG("Payload: %.*s", message->payload_len, message->payload);
         if (message->code >= COAP_GET && message->code <= COAP_DELETE)
         {
@@ -605,6 +606,7 @@ void lwm2m_handle_packet(lwm2m_context_t * contextP,
                 if (IS_OPTION(message, COAP_OPTION_BLOCK1) && (message->code == COAP_231_CONTINUE))
                 {
                     lwm2m_transaction_t * transaction;
+                    lwm2m_transaction_t * transacP;
                     uint32_t block1_num;
                     uint8_t  block1_more;
                     uint16_t block1_size;
@@ -612,6 +614,25 @@ void lwm2m_handle_packet(lwm2m_context_t * contextP,
                     coap_packet_t *block1_resp;
                     uint32_t next_block;
 
+                    transacP = contextP->transactionList;
+                    while (NULL != transacP)
+                    {
+                        if (lwm2m_session_is_equal(fromSessionH, transacP->peerH, contextP->userData))
+                        {
+                            LOG_ARG("Next mid %u", transacP->mID);
+                            if (transacP->mID != message->mid)
+                            {
+                                LOG_ARG("Ignore mid %u", message->mid);
+                                coap_free_header(message);
+                                return;
+                            }
+
+                            break;
+                        }
+
+                        transacP = transacP->next;
+                    }
+
                     transaction = prv_init_push_transaction(push_stateP->contextP, push_stateP->serverP, push_stateP->content_type);
                     if (transaction == NULL) return;
 
-- 
2.11.0

