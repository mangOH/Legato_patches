From 799125bbeef8ab26a3ac18ba97c80d6ed9e34bfc Mon Sep 17 00:00:00 2001
From: David Clark <dclark@sierrawireless.com>
Date: Wed, 7 Mar 2018 12:48:38 -0800
Subject: [PATCH] Fix LwM2MCore processing duplicate message IDs - p4

Updated LwM2MCore to keep track of the last received message ID (and if it
is valid) and only process those message IDs which have not already been
received.

Resolves: LE-9669
Change-Id: I829f87f5511d26cb9a5c8ed5d9b66bc62a5cc7f4
Signed-off-by: David Clark <dclark@sierrawireless.com>
---
 core/liblwm2m.c |  2 ++
 core/liblwm2m.h |  2 ++
 core/packet.c   | 33 +++++++++++++++++++++++++++++----
 3 files changed, 33 insertions(+), 4 deletions(-)

diff --git a/core/liblwm2m.c b/core/liblwm2m.c
index 3e26828..a3c25da 100644
--- a/core/liblwm2m.c
+++ b/core/liblwm2m.c
@@ -74,6 +74,8 @@ lwm2m_context_t * lwm2m_init(void * userData)
         contextP->userData = userData;
         srand((int)lwm2m_gettime());
         contextP->nextMID = rand();
+        contextP->lastRxMID = (uint16_t) - 1;
+        contextP->lastRxMIDValid = false;
     }
 
     return contextP;
diff --git a/core/liblwm2m.h b/core/liblwm2m.h
index 96912c7..89e9a14 100644
--- a/core/liblwm2m.h
+++ b/core/liblwm2m.h
@@ -720,6 +720,8 @@ typedef struct
     void *                     bootstrapUserData;
 #endif
     uint16_t                nextMID;
+    uint16_t                lastRxMID;
+    bool                    lastRxMIDValid;
     lwm2m_transaction_t *   transactionList;
     void *                  userData;
 } lwm2m_context_t;
diff --git a/core/packet.c b/core/packet.c
index 211c0ce..123f48d 100644
--- a/core/packet.c
+++ b/core/packet.c
@@ -145,10 +145,20 @@ static bool is_block_transfer(coap_packet_t * message, uint32_t * block_num, uin
 }
 #endif
 
+static bool record_received_mid(lwm2m_context_t * contextP,
+                                uint16_t mid)
+{
+    bool validMid = (!contextP->lastRxMIDValid || (contextP->lastRxMID + 1 == mid));
+    contextP->lastRxMID = (contextP->lastRxMID != mid) ? mid : contextP->lastRxMID;
+    contextP->lastRxMIDValid = (!contextP->lastRxMIDValid) ? true : contextP->lastRxMIDValid;
+    return validMid;
+}
+
 static uint8_t handle_request(lwm2m_context_t * contextP,
                               void * fromSessionH,
                               coap_packet_t * message,
-                              coap_packet_t * response)
+                              coap_packet_t * response,
+                              bool validMid)
 {
     lwm2m_uri_t * uriP = NULL;
     uint8_t result = COAP_IGNORE;
@@ -196,8 +206,12 @@ static uint8_t handle_request(lwm2m_context_t * contextP,
                     coap_init_message(response, COAP_TYPE_ACK, 0, message->mid);
                     message_send(contextP, response, fromSessionH);
 
-                    // Get actual response from user app
-                    return lwm2mcore_CallCoapEventHandler(message);
+                    LOG_ARG("Valid(%u) mid(%u)", validMid, message->mid);
+                    if (validMid)
+                    {
+                        // Get actual response from user app
+                        return lwm2mcore_CallCoapEventHandler(message);
+                    }
                 }
             }
         }
@@ -420,6 +434,7 @@ void lwm2m_handle_packet(lwm2m_context_t * contextP,
                          int length,
                          void * fromSessionH)
 {
+    uint8_t validMid = false;
     uint8_t coap_error_code = NO_ERROR;
     static coap_packet_t message[1];
     static coap_packet_t response[1];
@@ -433,6 +448,7 @@ void lwm2m_handle_packet(lwm2m_context_t * contextP,
     coap_error_code = coap_parse_message(message, buffer, (uint16_t)length);
     if (coap_error_code == NO_ERROR)
     {
+        LOG_ARG("Last received mid/valid %u/%u", contextP->lastRxMID, contextP->lastRxMIDValid);
         LOG_ARG("Parsed: blk: %u ver %u, type %u, tkl %u, code %u.%.2u, mid %u, Content type: %d",
                 message->block1_num, message->version, message->type, message->token_len, message->code >> 5,
                 message->code & 0x1F, message->mid, message->content_type);
@@ -502,6 +518,11 @@ void lwm2m_handle_packet(lwm2m_context_t * contextP,
                     // handle block 1
                     coap_error_code = coap_block1_handler(&serverP->block1Data, message->mid, message->payload, message->payload_len, block1_size, block1_num, block1_more, &complete_buffer, &complete_buffer_size);
 
+                    if (!block1_more)
+                    {
+                        validMid = record_received_mid(contextP, message->mid);
+                    }
+
                     // if payload is complete, replace it in the coap message.
                     if (coap_error_code == NO_ERROR)
                     {
@@ -518,9 +539,13 @@ void lwm2m_handle_packet(lwm2m_context_t * contextP,
                 coap_error_code = COAP_501_NOT_IMPLEMENTED;
 #endif
             }
+            else
+            {
+                validMid = record_received_mid(contextP, message->mid);
+            }
             if (coap_error_code == NO_ERROR)
             {
-                coap_error_code = handle_request(contextP, fromSessionH, message, response);
+                coap_error_code = handle_request(contextP, fromSessionH, message, response, validMid);
             }
             if (coap_error_code==NO_ERROR)
             {
-- 
2.11.0

